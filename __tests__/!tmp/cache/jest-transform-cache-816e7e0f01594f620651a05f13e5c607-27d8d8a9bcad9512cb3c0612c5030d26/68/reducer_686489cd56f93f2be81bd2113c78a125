93617246d5b0cc455ee0af19c314ba3c
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _immutable = require("immutable");

var _constants = require("./constants");

(function () {
  var enterModule = require('react-hot-loader').enterModule;

  enterModule && enterModule(module);
})();

var initialState = new _immutable.Map({
  error: '',
  isFetchingClaims: true,
  received: (0, _immutable.Map)(),
  emitted: (0, _immutable.Map)(),
  grouped: (0, _immutable.List)()
});

function claims() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments.length > 1 ? arguments[1] : undefined;

  switch (action.type) {
    case _constants.FETCHING_EMITTED_CLAIMS:
      return state.merge({
        isFetchingClaims: true
      });

    case _constants.FETCHING_EMITTED_CLAIMS_SUCCESS:
      return state.merge({
        isFetchingClaims: false,
        emitted: action.data
      });

    case _constants.FETCHING_EMITTED_CLAIMS_ERROR:
      return state.merge({
        isFetchingClaims: false,
        emitted: (0, _immutable.Map)(),
        error: action.error
      });

    case _constants.FETCHING_RECEIVED_CLAIMS:
      return state.merge({
        isFetchingClaims: true
      });

    case _constants.FETCHING_RECEIVED_CLAIMS_SUCCESS:
      return state.merge({
        isFetchingClaims: false,
        received: action.data
      });

    case _constants.FETCHING_RECEIVED_CLAIMS_ERROR:
      return state.merge({
        isFetchingClaims: false,
        received: (0, _immutable.Map)(),
        error: action.error
      });

    default:
      return state;
  }
}

var _default = claims;
var _default2 = _default;
exports.default = _default2;
;

(function () {
  var reactHotLoader = require('react-hot-loader').default;

  var leaveModule = require('react-hot-loader').leaveModule;

  if (!reactHotLoader) {
    return;
  }

  reactHotLoader.register(initialState, "initialState", "/home/charly/Uniclau/Iden3/web-wallet/src/state/claims/reducer.js");
  reactHotLoader.register(claims, "claims", "/home/charly/Uniclau/Iden3/web-wallet/src/state/claims/reducer.js");
  reactHotLoader.register(_default, "default", "/home/charly/Uniclau/Iden3/web-wallet/src/state/claims/reducer.js");
  leaveModule(module);
})();

;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZHVjZXIuanMiXSwibmFtZXMiOlsiaW5pdGlhbFN0YXRlIiwiSW1tdXRhYmxlTWFwIiwiZXJyb3IiLCJpc0ZldGNoaW5nQ2xhaW1zIiwicmVjZWl2ZWQiLCJlbWl0dGVkIiwiZ3JvdXBlZCIsImNsYWltcyIsInN0YXRlIiwiYWN0aW9uIiwidHlwZSIsIkZFVENISU5HX0VNSVRURURfQ0xBSU1TIiwibWVyZ2UiLCJGRVRDSElOR19FTUlUVEVEX0NMQUlNU19TVUNDRVNTIiwiZGF0YSIsIkZFVENISU5HX0VNSVRURURfQ0xBSU1TX0VSUk9SIiwiRkVUQ0hJTkdfUkVDRUlWRURfQ0xBSU1TIiwiRkVUQ0hJTkdfUkVDRUlWRURfQ0xBSU1TX1NVQ0NFU1MiLCJGRVRDSElOR19SRUNFSVZFRF9DTEFJTVNfRVJST1IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFJQTs7Ozs7Ozs7QUFTQSxJQUFNQSxZQUFZLEdBQUcsSUFBSUMsY0FBSixDQUFpQjtBQUNwQ0MsRUFBQUEsS0FBSyxFQUFFLEVBRDZCO0FBRXBDQyxFQUFBQSxnQkFBZ0IsRUFBRSxJQUZrQjtBQUdwQ0MsRUFBQUEsUUFBUSxFQUFFLHFCQUgwQjtBQUlwQ0MsRUFBQUEsT0FBTyxFQUFFLHFCQUoyQjtBQUtwQ0MsRUFBQUEsT0FBTyxFQUFFO0FBTDJCLENBQWpCLENBQXJCOztBQVFBLFNBQVNDLE1BQVQsR0FBOEM7QUFBQSxNQUE5QkMsS0FBOEIsdUVBQXRCUixZQUFzQjtBQUFBLE1BQVJTLE1BQVE7O0FBQzVDLFVBQVFBLE1BQU0sQ0FBQ0MsSUFBZjtBQUNFLFNBQUtDLGtDQUFMO0FBQ0UsYUFBT0gsS0FBSyxDQUFDSSxLQUFOLENBQVk7QUFDakJULFFBQUFBLGdCQUFnQixFQUFFO0FBREQsT0FBWixDQUFQOztBQUdGLFNBQUtVLDBDQUFMO0FBQ0UsYUFBT0wsS0FBSyxDQUFDSSxLQUFOLENBQVk7QUFDakJULFFBQUFBLGdCQUFnQixFQUFFLEtBREQ7QUFFakJFLFFBQUFBLE9BQU8sRUFBRUksTUFBTSxDQUFDSztBQUZDLE9BQVosQ0FBUDs7QUFJRixTQUFLQyx3Q0FBTDtBQUNFLGFBQU9QLEtBQUssQ0FBQ0ksS0FBTixDQUFZO0FBQ2pCVCxRQUFBQSxnQkFBZ0IsRUFBRSxLQUREO0FBRWpCRSxRQUFBQSxPQUFPLEVBQUUscUJBRlE7QUFHakJILFFBQUFBLEtBQUssRUFBRU8sTUFBTSxDQUFDUDtBQUhHLE9BQVosQ0FBUDs7QUFLRixTQUFLYyxtQ0FBTDtBQUNFLGFBQU9SLEtBQUssQ0FBQ0ksS0FBTixDQUFZO0FBQ2pCVCxRQUFBQSxnQkFBZ0IsRUFBRTtBQURELE9BQVosQ0FBUDs7QUFHRixTQUFLYywyQ0FBTDtBQUNFLGFBQU9ULEtBQUssQ0FBQ0ksS0FBTixDQUFZO0FBQ2pCVCxRQUFBQSxnQkFBZ0IsRUFBRSxLQUREO0FBRWpCQyxRQUFBQSxRQUFRLEVBQUVLLE1BQU0sQ0FBQ0s7QUFGQSxPQUFaLENBQVA7O0FBSUYsU0FBS0kseUNBQUw7QUFDRSxhQUFPVixLQUFLLENBQUNJLEtBQU4sQ0FBWTtBQUNqQlQsUUFBQUEsZ0JBQWdCLEVBQUUsS0FERDtBQUVqQkMsUUFBQUEsUUFBUSxFQUFFLHFCQUZPO0FBR2pCRixRQUFBQSxLQUFLLEVBQUVPLE1BQU0sQ0FBQ1A7QUFIRyxPQUFaLENBQVA7O0FBS0Y7QUFDRSxhQUFPTSxLQUFQO0FBaENKO0FBa0NEOztlQUVjRCxNOzs7Ozs7Ozs7Ozs7OzswQkE3Q1RQLFk7MEJBUUdPLE0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBNYXAgYXMgSW1tdXRhYmxlTWFwLFxuICBMaXN0IGFzIEltbXV0YWJsZUxpc3QsXG59IGZyb20gJ2ltbXV0YWJsZSc7XG5pbXBvcnQge1xuICBGRVRDSElOR19FTUlUVEVEX0NMQUlNUyxcbiAgRkVUQ0hJTkdfRU1JVFRFRF9DTEFJTVNfRVJST1IsXG4gIEZFVENISU5HX0VNSVRURURfQ0xBSU1TX1NVQ0NFU1MsXG4gIEZFVENISU5HX1JFQ0VJVkVEX0NMQUlNUyxcbiAgRkVUQ0hJTkdfUkVDRUlWRURfQ0xBSU1TX0VSUk9SLFxuICBGRVRDSElOR19SRUNFSVZFRF9DTEFJTVNfU1VDQ0VTUyxcbn0gZnJvbSAnLi9jb25zdGFudHMnO1xuXG5jb25zdCBpbml0aWFsU3RhdGUgPSBuZXcgSW1tdXRhYmxlTWFwKHtcbiAgZXJyb3I6ICcnLFxuICBpc0ZldGNoaW5nQ2xhaW1zOiB0cnVlLFxuICByZWNlaXZlZDogSW1tdXRhYmxlTWFwKCksXG4gIGVtaXR0ZWQ6IEltbXV0YWJsZU1hcCgpLFxuICBncm91cGVkOiBJbW11dGFibGVMaXN0KCksXG59KTtcblxuZnVuY3Rpb24gY2xhaW1zKHN0YXRlID0gaW5pdGlhbFN0YXRlLCBhY3Rpb24pIHtcbiAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgIGNhc2UgRkVUQ0hJTkdfRU1JVFRFRF9DTEFJTVM6XG4gICAgICByZXR1cm4gc3RhdGUubWVyZ2Uoe1xuICAgICAgICBpc0ZldGNoaW5nQ2xhaW1zOiB0cnVlLFxuICAgICAgfSk7XG4gICAgY2FzZSBGRVRDSElOR19FTUlUVEVEX0NMQUlNU19TVUNDRVNTOlxuICAgICAgcmV0dXJuIHN0YXRlLm1lcmdlKHtcbiAgICAgICAgaXNGZXRjaGluZ0NsYWltczogZmFsc2UsXG4gICAgICAgIGVtaXR0ZWQ6IGFjdGlvbi5kYXRhLFxuICAgICAgfSk7XG4gICAgY2FzZSBGRVRDSElOR19FTUlUVEVEX0NMQUlNU19FUlJPUjpcbiAgICAgIHJldHVybiBzdGF0ZS5tZXJnZSh7XG4gICAgICAgIGlzRmV0Y2hpbmdDbGFpbXM6IGZhbHNlLFxuICAgICAgICBlbWl0dGVkOiBJbW11dGFibGVNYXAoKSxcbiAgICAgICAgZXJyb3I6IGFjdGlvbi5lcnJvcixcbiAgICAgIH0pO1xuICAgIGNhc2UgRkVUQ0hJTkdfUkVDRUlWRURfQ0xBSU1TOlxuICAgICAgcmV0dXJuIHN0YXRlLm1lcmdlKHtcbiAgICAgICAgaXNGZXRjaGluZ0NsYWltczogdHJ1ZSxcbiAgICAgIH0pO1xuICAgIGNhc2UgRkVUQ0hJTkdfUkVDRUlWRURfQ0xBSU1TX1NVQ0NFU1M6XG4gICAgICByZXR1cm4gc3RhdGUubWVyZ2Uoe1xuICAgICAgICBpc0ZldGNoaW5nQ2xhaW1zOiBmYWxzZSxcbiAgICAgICAgcmVjZWl2ZWQ6IGFjdGlvbi5kYXRhLFxuICAgICAgfSk7XG4gICAgY2FzZSBGRVRDSElOR19SRUNFSVZFRF9DTEFJTVNfRVJST1I6XG4gICAgICByZXR1cm4gc3RhdGUubWVyZ2Uoe1xuICAgICAgICBpc0ZldGNoaW5nQ2xhaW1zOiBmYWxzZSxcbiAgICAgICAgcmVjZWl2ZWQ6IEltbXV0YWJsZU1hcCgpLFxuICAgICAgICBlcnJvcjogYWN0aW9uLmVycm9yLFxuICAgICAgfSk7XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBzdGF0ZTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFpbXM7XG4iXX0=