{"version":3,"sources":["webpack.prod.js"],"names":["webpack","require","UglifyJsPlugin","MiniCssExtractPlugin","OptimizeCSSAssetsPlugin","merge","common","environmentPlugin","DefinePlugin","JSON","stringify","miniCssExtractPlugin","filename","chunkFilename","module","exports","devtool","mode","optimization","minimizer","cache","parallel","sourceMap","plugins","rules","test","use","loader","options","modules","importLoaders","localIdentName","minimize"],"mappings":";;;;;;;;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,cAAc,GAAGD,OAAO,CAAC,yBAAD,CAA9B,C,CACA;;;AACA,IAAME,oBAAoB,GAAGF,OAAO,CAAC,yBAAD,CAApC,C,CACA;;;AACA,IAAMG,uBAAuB,GAAGH,OAAO,CAAC,oCAAD,CAAvC;;AACA,IAAMI,KAAK,GAAGJ,OAAO,CAAC,eAAD,CAArB;;AACA,IAAMK,MAAM,GAAGL,OAAO,CAAC,qBAAD,CAAtB,C,CAEA;;;AACA,IAAMM,iBAAiB,GAAG,IAAIP,OAAO,CAACQ,YAAZ,CAAyB;AACjD,0BAAwBC,IAAI,CAACC,SAAL,CAAe,YAAf;AADyB,CAAzB,CAA1B;AAGA,IAAMC,oBAAoB,GAAG,IAAIR,oBAAJ,CAAyB;AACpDS,EAAAA,QAAQ,EAAE,mBAD0C;AAEpDC,EAAAA,aAAa,EAAE;AAFqC,CAAzB,CAA7B;AAKAC,MAAM,CAACC,OAAP,GAAiBV,KAAK,CAACC,MAAD,EAAS;AAC7BU,EAAAA,OAAO,EAAE,YADoB;AAE7BC,EAAAA,IAAI,EAAE,YAFuB;AAG7BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,SAAS,EAAE,CACT,IAAIjB,cAAJ,CAAmB;AACjBkB,MAAAA,KAAK,EAAE,IADU;AAEjBC,MAAAA,QAAQ,EAAE,IAFO;AAGjBC,MAAAA,SAAS,EAAE,IAHM,CAGA;;AAHA,KAAnB,CADS,EAMT,IAAIlB,uBAAJ,CAA4B,EAA5B,CANS;AADC,GAHe;AAa7BmB,EAAAA,OAAO,EAAE,CACPZ,oBADO,EAEPJ,iBAFO,CAboB;AAiB7BO,EAAAA,MAAM,EAAE;AACNU,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,IAAI,EAAE,gBADR;AAEEC,MAAAA,GAAG,EAAE,CACHvB,oBAAoB,CAACwB,MADlB,EAEH;AACEA,QAAAA,MAAM,EAAE,YADV;AACwB;AACtBC,QAAAA,OAAO,EAAE;AACP;AACAC,UAAAA,OAAO,EAAE,IAFF;AAGPC,UAAAA,aAAa,EAAE,CAHR;AAIP;AACAC,UAAAA,cAAc,EAAE,8BALT;AAMPT,UAAAA,SAAS,EAAE,IANJ;AAOPU,UAAAA,QAAQ,EAAE;AAPH;AAFX,OAFG,EAcH;AACA,mBAfG;AAFP,KADK;AADD;AAjBqB,CAAT,CAAtB;;;;;;;;;;;;0BARMzB,iB;0BAGAI,oB","sourcesContent":["const webpack = require('webpack');\nconst UglifyJsPlugin = require('uglifyjs-webpack-plugin');\n// create a CSS file per JS file which contains CSS\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\n// optimize and minimize the CSS\nconst OptimizeCSSAssetsPlugin = require('optimize-css-assets-webpack-plugin');\nconst merge = require('webpack-merge');\nconst common = require('./webpack.config.js');\n\n// some libraries look for process.env.NODE_ENV to optimize and webpack doesn't include it\nconst environmentPlugin = new webpack.DefinePlugin({\n  'process.env.NODE_ENV': JSON.stringify('production'),\n});\nconst miniCssExtractPlugin = new MiniCssExtractPlugin({\n  filename: '[name].[hash].css',\n  chunkFilename: '[id].[hash].css',\n});\n\nmodule.exports = merge(common, {\n  devtool: 'source-map',\n  mode: 'production',\n  optimization: {\n    minimizer: [\n      new UglifyJsPlugin({\n        cache: true,\n        parallel: true,\n        sourceMap: true, // set to true to have JS source maps\n      }),\n      new OptimizeCSSAssetsPlugin({}),\n    ],\n  },\n  plugins: [\n    miniCssExtractPlugin,\n    environmentPlugin,\n  ],\n  module: {\n    rules: [\n      {\n        test: /\\.(sa|sc|c)ss$/,\n        use: [\n          MiniCssExtractPlugin.loader,\n          {\n            loader: 'css-loader', // to resolve css files\n            options: {\n              // make CSS modular, class name will be scoped locally and specific to only the component in question\n              modules: true,\n              importLoaders: 1,\n              // to configure the generated identification: [name of the component]_[name of class/id]_[random unique hash]\n              localIdentName: '[name]_[local]_[hash:base64]',\n              sourceMap: true,\n              minimize: true,\n            },\n          },\n          // Loads a Sass/SCSS file and compiles it to CSS\n          'sass-loader',\n        ],\n      },\n    ],\n  },\n});\n"]}