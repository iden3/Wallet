{"version":3,"sources":["webpack.dev.js"],"names":["webpack","require","merge","common","environmentPlugin","DefinePlugin","JSON","stringify","module","exports","mode","devServer","contentBase","devtool","plugins","HotModuleReplacementPlugin","rules","test","use","loader","options","importLoaders","localIdentName","sourceMap","minimize","resources"],"mappings":";;;;;;;;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,eAAD,CAArB;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,qBAAD,CAAtB,C,CAEA;;;AACA,IAAMG,iBAAiB,GAAG,IAAIJ,OAAO,CAACK,YAAZ,CAAyB;AACjD,0BAAwBC,IAAI,CAACC,SAAL,CAAe,aAAf;AADyB,CAAzB,CAA1B;AAIAC,MAAM,CAACC,OAAP,GAAiBP,KAAK,CAACC,MAAD,EAAS;AAC7BO,EAAAA,IAAI,EAAE,aADuB;AAE7BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,WAAW,EAAE;AADJ,GAFkB;AAK7BC,EAAAA,OAAO,EAAE,yBALoB;AAM7BC,EAAAA,OAAO,EAAE,CACPV,iBADO,EAEP;AACA,MAAIJ,OAAO,CAACe,0BAAZ,EAHO,CANoB;AAc7BP,EAAAA,MAAM,EAAE;AACNQ,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,IAAI,EAAE,gBADR;AAEEC,MAAAA,GAAG,EAAE,CACH;AACA,oBAFG,EAGH;AACA;AACEC,QAAAA,MAAM,EAAE,YADV;AAEEC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAE,CADR;AAEPb,UAAAA,MAAM,EAAE,IAFD;AAGP;AACAc,UAAAA,cAAc,EAAE,8BAJT;AAKPC,UAAAA,SAAS,EAAE,IALJ;AAMPC,UAAAA,QAAQ,EAAE;AANH;AAFX,OAJG,EAeH;AACA,mBAhBG,EAiBH;AACA;AACEL,QAAAA,MAAM,EAAE,uBADV;AAEEC,QAAAA,OAAO,EAAE;AACP;AACAK,UAAAA,SAAS,EAAE,CACT,8BADS,EAET,2BAFS;AAFJ;AAFX,OAlBG;AAFP,KADK;AADD;AAdqB,CAAT,CAAtB;;;;;;;;;;;;0BAJMrB,iB","sourcesContent":["const webpack = require('webpack');\nconst merge = require('webpack-merge');\nconst common = require('./webpack.config.js');\n\n// some libraries look for process.env.NODE_ENV to optimize and webpack doesn't include it\nconst environmentPlugin = new webpack.DefinePlugin({\n  'process.env.NODE_ENV': JSON.stringify('development'),\n});\n\nmodule.exports = merge(common, {\n  mode: 'development',\n  devServer: {\n    contentBase: './dist',\n  },\n  devtool: 'cheap-module-source-map',\n  plugins: [\n    environmentPlugin,\n    // This is necessary to emit hot updates (currently CSS only):\n    new webpack.HotModuleReplacementPlugin(),\n    // we need it to create a style.[contenthash].css file when do a hot update of any SCSS file\n    // since webpack (version 4.3) has a known problem about this. So each time we change a SCSS File\n    // it'll generate a new hash, and we can see the changes\n  ],\n  module: {\n    rules: [\n      {\n        test: /\\.(sa|sc|c)ss$/,\n        use: [\n          // Adds CSS to the DOM by injecting a <style> tag --> https://github.com/webpack-contrib/style-loader\n          'style-loader',\n          // Interprets @import and url() like import/require() and will resolve them -->  https://github.com/webpack-contrib/css-loader\n          {\n            loader: 'css-loader',\n            options: {\n              importLoaders: 3,\n              module: true,\n              // to configure the generated identification: [name of the component]_[name of class/id]_[random unique hash]\n              localIdentName: '[name]_[local]_[hash:base64]',\n              sourceMap: true,\n              minimize: true,\n            },\n          },\n          // Loads a Sass/SCSS file and compiles it to CSS --> https://github.com/webpack-contrib/sass-loader\n          'sass-loader',\n          // @import SASS resources into every required SASS module --> https://github.com/shakacode/sass-resources-loader\n          {\n            loader: 'sass-resources-loader',\n            options: {\n              // Provide path to the file with resources\n              resources: [\n                './src/styles/_variables.scss',\n                './src/styles/_mixins.scss',\n              ],\n            },\n          },\n        ],\n      },\n    ],\n  },\n});\n"]}