{"version":3,"sources":["nav-bar.js"],"names":["NavBar","key","replace","collapsed","mobileMenuIcon","BURGER_MENU_UNFOLD","isCameraVisible","setState","prevState","BURGER_MENU_FOLD","items","Object","keys","ROUTES","forEach","route","_route","ORDER","push","KEY","toggleMenuMobileIcon","MAIN","ICON","title","IDENTITY","IDENTITIES","menuItems","_getMenuItems","settingsMenu","_getSettingSubmenu","selectedMenuItem","memoizedPath","props","location","pathname","state","toggleCameraVisibility","Component","PropTypes","object","isRequired","withRouter"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { compose } from 'redux';\nimport PropTypes from 'prop-types';\nimport {\n  Link,\n  withRouter,\n} from 'react-router-dom';\nimport memoizeOne from 'memoize-one';\nimport {\n  Badge,\n  Button,\n  Icon,\n  Menu,\n  MenuItem,\n  SubMenu,\n} from 'base_components';\nimport { QRScanner } from 'views';\nimport * as ROUTES from 'constants/routes';\nimport {\n  BURGER_MENU_FOLD,\n  BURGER_MENU_UNFOLD,\n  IDENTITY,\n} from 'constants/icons';\nimport { capitalizeFirstLetter } from 'helpers/utils';\n\nimport './nav-bar.scss';\n\n/**\n * Navigation bar to use it in the header. It has a desktop menu and a mobile menu depending on\n * the breakpoint, calculated via css. It has on the left the menu for the different views\n * and on the right a settings/user menu. Once is collapsed (when is accessed via a tablet or phone)\n * we have all in the same menu.\n */\nclass NavBar extends Component {\n  // change the selected menu item when location has changed (when user has introduced by hand the URL i.e.)\n  memoizedPath = memoizeOne(key => capitalizeFirstLetter(key.replace(/\\//g, '')));\n\n  static propTypes = {\n    // from withRouter Hoc\n    location: PropTypes.object.isRequired,\n  };\n\n  state = {\n    collapsed: true,\n    mobileMenuIcon: BURGER_MENU_UNFOLD,\n    isCameraVisible: false,\n  };\n\n  toggleCameraVisibility = () => {\n    this.setState(\n      prevState => ({ isCameraVisible: !prevState.isCameraVisible }),\n    );\n  };\n\n  /**\n   * Toggle the icon of the 'burger' icon shown in tablet and mobile size to indicate to open it o close it\n   */\n  toggleMenuMobileIcon = () => {\n    this.setState(prevState => (\n      {\n        mobileMenuIcon: prevState.mobileMenuIcon === BURGER_MENU_FOLD ? BURGER_MENU_UNFOLD : BURGER_MENU_FOLD,\n        collapsed: !prevState.collapsed,\n      }));\n  };\n\n  /**\n   * Compose all the Menu with their links and routes\n   * @returns {element[]} An array of React nodes (MenuItem)\n   * @private\n   */\n  _getMenuItems() {\n    const items = [];\n\n    Object.keys(ROUTES).forEach((route) => {\n      const _route = ROUTES[route];\n\n      // in every Link created, we set the replace prop to true\n      // because when clicking the link will replace the\n      // current entry in the history stack instead of adding a new one.\n      // If not a Warning is triggered when we click more than one time\n      // in the current link because we are adding the same entry once and again.\n      // Please, FMI, visit: https://reacttraining.com/react-router/web/api/Link/replace-bool\n      if (_route.ORDER !== -1) {\n        items.push(\n          <MenuItem\n            key={_route.KEY}\n            onClick={this.toggleMenuMobileIcon}>\n            <Link to={_route.MAIN} replace />\n            <Icon type={_route.ICON} />\n            {_route.KEY}\n          </MenuItem>,\n        );\n      }\n    });\n\n    return items;\n  }\n\n  /**\n   * Set the submenu for the setting/user menu. Valid for desktop and mobile size.\n   * We will have an icon, the name of the current identity and a\n   * badge in the top of the icon with the number of notifications\n   * @returns {element} React node with the settings SubMenu\n   */\n  _getSettingSubmenu() {\n    const title = (\n      <span>\n        <Badge count={5}>\n          <Icon type={IDENTITY} />\n        </Badge>\n        Identity A\n      </span>\n    );\n\n    return (\n      <SubMenu title={title}>\n        <MenuItem>\n          Identity 2\n        </MenuItem>\n        <MenuItem>\n          Identity 3\n        </MenuItem>\n        <MenuItem>\n          <Button\n            type=\"primary\"\n            htmlType=\"button\">\n            <Link to={ROUTES.IDENTITIES.MAIN} replace>\n              Manage my identities\n            </Link>\n          </Button>\n        </MenuItem>\n      </SubMenu>\n    );\n  }\n\n  render() {\n    const menuItems = this._getMenuItems();\n    const settingsMenu = this._getSettingSubmenu();\n    const selectedMenuItem = this.memoizedPath(this.props.location.pathname);\n\n    return (\n      <div className=\"i3-ww-nav-bar\">\n        {/* Collapsed menu in small devices */}\n        <div className=\"i3-ww-nav-bar-mobile\">\n          <Button\n            className=\"i3-ww-nav-bar-mobile__menu-button\"\n            type=\"primary\"\n            htmlType=\"button\"\n            onClick={this.toggleMenuMobileIcon}\n            onKeyUp={this.toggleMenuMobileIcon}>\n            <Icon type={this.state.mobileMenuIcon} />\n          </Button>\n          <Menu\n            defaultSelectedKeys={[selectedMenuItem]}\n            mode=\"inline\"\n            inlineCollapsed={this.state.collapsed}>\n            { !this.state.collapsed && menuItems }\n            { !this.state.collapsed && settingsMenu }\n          </Menu>\n        </div>\n        {/* Regular menu for desktop */}\n        <div className=\"i3-ww-nav-bar__header-items\">\n          <div className=\"i3-ww-nav-bar-desktop\">\n            <Menu\n              mode=\"horizontal\"\n              selectedKeys={[selectedMenuItem]}>\n              { menuItems }\n            </Menu>\n          </div>\n          <div className=\"i3-ww-nav-bar__cam-button\">\n            <Menu mode=\"horizontal\" onClick={this.toggleCameraVisibility}>\n              <MenuItem>\n                <Icon type=\"camera-o\" />\n              </MenuItem>\n            </Menu>\n          </div>\n          <div className=\"i3-ww-nav-bar-settings\">\n            <Menu mode=\"horizontal\">\n              { settingsMenu }\n            </Menu>\n          </div>\n        </div>\n        {/* Box to show camera for reading QR */}\n        <QRScanner\n          isCameraVisible={this.state.isCameraVisible}\n          toggleCameraVisibility={this.toggleCameraVisibility} />\n      </div>\n    );\n  }\n}\n\nexport default compose(\n  withRouter,\n)(NavBar);\n"]}