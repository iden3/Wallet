60332a77981e8750b7fed26b6aeeea7f
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _base_components = require("base_components");

var BOX_CONSTANTS = _interopRequireWildcard(require("constants/box"));

var _header = _interopRequireDefault(require("./header/header"));

require("./box.scss");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

(function () {
  var enterModule = require('react-hot-loader').enterModule;

  enterModule && enterModule(module);
})();

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var boxTypes = Object.values(BOX_CONSTANTS.TYPE);
/**
 * Element to show information sent by another component. We can show it in a
 * regular emergent pop-up or in a sidebar that appears from the left or right.
 * The responsibility of the state of the box (if is shown or not) it's here.
 * Shouldn't be in the parent. The parent will send a call back to trigger
 * anything that it's important to execute after the Box is hidden.
 */

var Box =
/*#__PURE__*/
function (_Component) {
  _inherits(Box, _Component);

  function Box() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, Box);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Box)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "state", {
      container: {},
      isVisible: _this.props.show
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "handleFocus", function (event) {
      if (_this.state.isVisible && !_this.state.container.contains(event.target)) {
        event.stopPropagation();

        _this.state.container.focus();
      }
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "handleClose", function (_ref) {
      var keyCode = _ref.keyCode;

      if (_this.state.isVisible && keyCode && keyCode === 27) {
        _this.props.onClose();

        _this.lastActive.focus();
      }
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "setActiveContainer", function (container) {
      _this.setState({
        container: container
      }, function () {
        _this.lastActive = document.activeElement;

        _this.state.container.focus();

        document.addEventListener('focus', _this.handleFocus, true);
        document.addEventListener('keydown', _this.handleClose, true);
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "toggleBoxVisibility", function () {
      _this.setState(function (prevState) {
        if (prevState.isVisible && _this.props.onClose) {
          _this.props.onClose();
        }

        return {
          isVisible: !prevState.isVisible
        };
      });
    });

    return _this;
  }

  _createClass(Box, [{
    key: "componentWillUnmount",

    /**
     * Remove the listeners to the focus and escape and return the focus
     * to the las element active before show the Box
     */
    value: function componentWillUnmount() {
      document.removeEventListener('keydown', this.handleClose, true);
      document.removeEventListener('focus', this.handleFocus, true);
      this.lastActive.focus();
    }
    /**
     * Set the focus for usability in the content shown in the  box
     * @param {object} event
     */

  }, {
    key: "_getContent",

    /**
     * Get the content to render, a SidePanel or a Pop-up
     * @returns {object} React node with a SidePanel or a Popup component
     * @private
     */
    value: function _getContent() {
      var Container = this.props.type === BOX_CONSTANTS.TYPE.SIDE_PANEL ? _base_components.SidePanel : _base_components.PopUp;

      var header = _react.default.createElement(_header.default, {
        title: this.props.title,
        onClose: this.props.onClose
      });

      return _react.default.createElement(Container, {
        header: header,
        side: this.props.side,
        onClose: this.toggleBoxVisibility,
        setActiveContainer: this.setActiveContainer,
        isVisible: this.state.isVisible
      }, this.props.content);
    }
  }, {
    key: "render",
    value: function render() {
      return _react.default.createElement("div", {
        className: "i3-ww-box"
      }, _react.default.createElement(_base_components.Portal, {
        parentClassName: "i3-ww-box"
      }, this._getContent()));
    }
  }, {
    key: "__reactstandin__regenerateByEval",
    // @ts-ignore
    value: function __reactstandin__regenerateByEval(key, code) {
      // @ts-ignore
      this[key] = eval(code);
    }
  }], [{
    key: "getDerivedStateFromProps",

    /**
     * Set the new state if visibility changes regading parent component
     * @param {object} props new props from parent
     * @param {object} state current state before have been updated
     * @returns {object} updated state
     */
    value: function getDerivedStateFromProps(props, state) {
      if (props.show !== state.isVisible) {
        return {
          isVisible: props.show
        };
      }

      return state;
    }
  }]);

  return Box;
}(_react.Component);

_defineProperty(Box, "propTypes", {
  /*
  The content to show
   */
  content: _propTypes.default.object.isRequired,

  /*
    Call back from any parent to trigger when box is closed
   */
  onClose: _propTypes.default.func,

  /*
   Show the box or not
   */
  show: _propTypes.default.bool,

  /*
   Side to show the side panel, prop only valid if prop type is 'side'
   */
  side: _propTypes.default.string,

  /*
   Title to show in the header
   */
  title: _propTypes.default.string,

  /*
  The type of box to show
   */
  type: _propTypes.default.oneOf(boxTypes).isRequired
});

var _default = Box;
var _default2 = _default;
exports.default = _default2;
;

(function () {
  var reactHotLoader = require('react-hot-loader').default;

  var leaveModule = require('react-hot-loader').leaveModule;

  if (!reactHotLoader) {
    return;
  }

  reactHotLoader.register(boxTypes, "boxTypes", "/home/charly/Uniclau/Iden3/web-wallet/src/components/box/box.js");
  reactHotLoader.register(Box, "Box", "/home/charly/Uniclau/Iden3/web-wallet/src/components/box/box.js");
  reactHotLoader.register(_default, "default", "/home/charly/Uniclau/Iden3/web-wallet/src/components/box/box.js");
  leaveModule(module);
})();

;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,