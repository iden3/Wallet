{"version":3,"sources":["widget.js"],"names":["Widget","isMinimized","setState","prevProps","props","title","rest","contentClasses","state","toggleMinimizeMaximizeWidget","PureComponent","isFetching","PropTypes","bool","isRequired","hasError","hasData","minHeight","string","children","node"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,M;;;;;;;;;;;;;;;;;;oFAwBI;AACNC,MAAAA,WAAW,EAAE;AADP,K;;2GAIuB,YAAM;AACnC,YAAKC,QAAL,CAAc,UAAAC,SAAS;AAAA,eAAK;AAAEF,UAAAA,WAAW,EAAE,CAACE,SAAS,CAACF;AAA1B,SAAL;AAAA,OAAvB;AACD,K;;;;;;;6BAEQ;AAAA,wBACoB,KAAKG,KADzB;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACWC,IADX;;AAEP,UAAMC,cAAc,GAAG,yBAAW;AAChC,4CAAoC,KAAKC,KAAL,CAAWP;AADf,OAAX,CAAvB;AAIA,aACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,0CACE,6BAAC,eAAD;AACE,QAAA,WAAW,EAAE,KAAKO,KAAL,CAAWP,WAD1B;AAEE,QAAA,OAAO,EAAE,KAAKQ,4BAFhB;AAGE,QAAA,KAAK,EAAEJ;AAHT,QADF,CADF,EAOE;AAAK,QAAA,SAAS,EAAEE;AAAhB,SACE,6BAAC,gBAAD;AAAS,QAAA,WAAW,EAAE,KAAKC,KAAL,CAAWP;AAAjC,SAAkDK,IAAlD,EADF,CAPF,CADF;AAaD;;;;;;;;;;;EAnDkBI,oB;;gBAAfV,M,eACe;AACjB;;;AAGAW,EAAAA,UAAU,EAAEC,mBAAUC,IAAV,CAAeC,UAJV;;AAKjB;;;AAGAC,EAAAA,QAAQ,EAAEH,mBAAUC,IAAV,CAAeC,UARR;;AASjB;;;AAGAE,EAAAA,OAAO,EAAEJ,mBAAUC,IAAV,CAAeC,UAZP;;AAajB;;;AAGAG,EAAAA,SAAS,EAAEL,mBAAUM,MAhBJ;;AAiBjB;;;AAGAC,EAAAA,QAAQ,EAAEP,mBAAUQ,IAAV,CAAeN;AApBR,C;;eAqDNd,M;;;;;;;;;;;;;;0BAtDTA,M","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Header from './header/header';\nimport Content from './content/content';\n\nimport './widget.scss';\n\nclass Widget extends PureComponent {\n  static propTypes = {\n    /*\n      isFetching flag\n     */\n    isFetching: PropTypes.bool.isRequired,\n    /*\n      Boolean variable to show if there is an error\n     */\n    hasError: PropTypes.bool.isRequired,\n    /*\n      Determines whether to show the no-data message\n     */\n    hasData: PropTypes.bool.isRequired,\n    /*\n      Min height property to prevent loading spinner collapsing when its container has no height\n     */\n    minHeight: PropTypes.string,\n    /*\n      Children\n     */\n    children: PropTypes.node.isRequired,\n  };\n\n  state = {\n    isMinimized: false,\n  };\n\n  toggleMinimizeMaximizeWidget = () => {\n    this.setState(prevProps => ({ isMinimized: !prevProps.isMinimized }));\n  };\n\n  render() {\n    const { title, ...rest } = this.props;\n    const contentClasses = classNames({\n      'i3-ww-widget__content--minimized': this.state.isMinimized,\n    });\n\n    return (\n      <div className=\"i3-ww-widget\">\n        <div>\n          <Header\n            isMinimized={this.state.isMinimized}\n            onClick={this.toggleMinimizeMaximizeWidget}\n            title={title} />\n        </div>\n        <div className={contentClasses}>\n          <Content isMinimized={this.state.isMinimized} {...rest} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Widget;\n"]}