{"version":3,"sources":["pop-up.js"],"names":["popUpSizes","Object","keys","BOX_CONSTANTS","POP_UP","SIZE","PopUp","props","setActiveContainer","container","innerClasses","isVisible","size","backgroundClasses","header","el","children","footer","PureComponent","PropTypes","node","isRequired","bool","func","oneOf","MEDIUM"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYC,aAAa,CAACC,MAAd,CAAqBC,IAAjC,CAAnB;;IAEMC,K;;;;;;;;;;;;;wCAiCgB;AAClB,WAAKC,KAAL,CAAWC,kBAAX,CAA8B,KAAKC,SAAnC;AACD;;;6BAEQ;AAAA;;AACP,UAAMC,YAAY,GAAG;AACnB,wBAAgB,IADG;AAEnB,iCAAyB,KAAKH,KAAL,CAAWI;AAFjB,sCAGI,KAAKJ,KAAL,CAAWK,IAHf,GAGwB,IAHxB,EAArB;AAKA,UAAMC,iBAAiB,GAAG,yBAAW;AACnC,6CAAqC,KAAKN,KAAL,CAAWI;AADb,OAAX,CAA1B;AAIA,aACE,6BAAC,eAAD,QACE;AAAK,QAAA,SAAS,EAAEE;AAAhB,QADF,EAEE;AACE,QAAA,SAAS,EAAEH,YADb;AAEE,QAAA,IAAI,EAAC;AAFP,SAGE,0CACG,KAAKH,KAAL,CAAWO,MADd,CAHF,EAME;AACE,QAAA,GAAG,EAAE,aAACC,EAAD,EAAQ;AAAE,UAAA,KAAI,CAACN,SAAL,GAAiBM,EAAjB;AAAsB,SADvC;AAEE,QAAA,IAAI,EAAC;AAFP,SAGG,KAAKR,KAAL,CAAWS,QAHd,CANF,EAWE,0CACG,KAAKT,KAAL,CAAWU,MADd,CAXF,CAFF,CADF;AAoBD;;;;;;;;;;;EAnEiBC,oB;;gBAAdZ,K,eACe;AACjB;;;AAGAU,EAAAA,QAAQ,EAAEG,mBAAUC,IAAV,CAAeC,UAJR;;AAKjB;;;AAGAP,EAAAA,MAAM,EAAEK,mBAAUC,IARD;;AASjB;;;AAGAH,EAAAA,MAAM,EAAEE,mBAAUC,IAZD;;AAajB;;;AAGAT,EAAAA,SAAS,EAAEQ,mBAAUG,IAhBJ;;AAiBjB;;;AAGAd,EAAAA,kBAAkB,EAAEW,mBAAUI,IAAV,CAAeF,UApBlB;;AAqBjB;;;AAGAT,EAAAA,IAAI,EAAEO,mBAAUK,KAAV,CAAgBxB,UAAhB;AAxBW,C;;gBADfM,K,kBA4BkB;AACpBK,EAAAA,SAAS,EAAE,KADS;AAEpBC,EAAAA,IAAI,EAAET,aAAa,CAACC,MAAd,CAAqBC,IAArB,CAA0BoB;AAFZ,C;;eA0CTnB,K;;;;;;;;;;;;;;0BAxETN,U;0BAEAM,K","sourcesContent":["import React, { Fragment, PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport * as BOX_CONSTANTS from 'constants/box';\n\nimport './pop-up.scss';\n\nconst popUpSizes = Object.keys(BOX_CONSTANTS.POP_UP.SIZE);\n\nclass PopUp extends PureComponent {\n  static propTypes = {\n    /*\n    Children\n     */\n    children: PropTypes.node.isRequired,\n    /*\n     Header React element\n     */\n    header: PropTypes.node,\n    /*\n     Footer React element\n     */\n    footer: PropTypes.node,\n    /*\n    Set if the pop-up should be shown or not\n     */\n    isVisible: PropTypes.bool,\n    /*\n     Callback set the active container to focus for accessibility\n     */\n    setActiveContainer: PropTypes.func.isRequired,\n    /*\n     Size of the pop-up, should be one of the BOX_CONSTANTS.POP_UP sizes\n     */\n    size: PropTypes.oneOf(popUpSizes),\n  };\n\n  static defaultProps = {\n    isVisible: false,\n    size: BOX_CONSTANTS.POP_UP.SIZE.MEDIUM,\n  };\n\n  componentDidMount() {\n    this.props.setActiveContainer(this.container);\n  }\n\n  render() {\n    const innerClasses = classNames({\n      'i3-ww-pop-up': true,\n      'i3-ww-pop-up--visible': this.props.isVisible,\n      [`i3-ww-pop-up--size-${this.props.size}`]: true,\n    });\n    const backgroundClasses = classNames({\n      'i3-ww-pop-up__background--visible': this.props.isVisible,\n    });\n\n    return (\n      <Fragment>\n        <div className={backgroundClasses} />\n        <div\n          className={innerClasses}\n          role=\"dialog\">\n          <div>\n            {this.props.header}\n          </div>\n          <div\n            ref={(el) => { this.container = el; }}\n            role=\"document\">\n            {this.props.children}\n          </div>\n          <div>\n            {this.props.footer}\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default PopUp;\n"]}